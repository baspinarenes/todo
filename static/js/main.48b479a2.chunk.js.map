{"version":3,"sources":["components/Todo.js","components/Time.js","components/TodoHeader.js","components/TodoFooter.js","App.js","index.js"],"names":["Todo","todo","todos","setTodos","isMobile","useState","showDeleteButton","setShowDeleteButton","console","log","onMouseOver","e","stopPropagation","onMouseLeave","onClick","map","todoItem","id","isCompleted","className","filter","Time","Date","time","setTime","useEffect","timer","setInterval","clearInterval","options","year","month","day","dateFormatted","toLocaleTimeString","slice","timeFormatted","TodoHeader","inputText","setInputText","localStorage","clear","autoFocus","type","value","onChange","target","onKeyDown","key","alert","length","text","placeholder","TodoFooter","setFilter","isShowCompleted","setIsShowCompleted","isShowNompleted","setIsShowNompleted","checkBoxHandler","checked","htmlFor","App","filteredTodos","setFilteredTodos","setIsMobile","window","innerWidth","getItem","JSON","parse","setItem","stringify","screenSize","setScreenSize","useLayoutEffect","updateScreenSize","addEventListener","removeEventListener","useMediaQuery","threshold","scrollStartThreshold","swipeStartThreshold","swipeLeft","content","action","onSwipeProgress","progress","info","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.48b479a2.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction Todo({ todo, todos, setTodos, isMobile }) {\r\n  const [showDeleteButton, setShowDeleteButton] = useState(false);\r\n\r\n  const mouseOverHandle = (e) => {\r\n    e.stopPropagation();\r\n    setShowDeleteButton(true);\r\n  };\r\n\r\n  const mouseLeaveHandle = (e) => {\r\n    e.stopPropagation();\r\n    setShowDeleteButton(false);\r\n  };\r\n\r\n  const deleteHandler = (e) => {\r\n    e.stopPropagation();\r\n    setTodos(todos.filter((todoItem) => todoItem.id !== todo.id));\r\n  };\r\n\r\n  const completeHandler = (e) => {\r\n    setTodos(\r\n      todos.map((todoItem) => {\r\n        if (todoItem.id === todo.id) {\r\n          return { ...todoItem, isCompleted: !todoItem.isCompleted };\r\n        }\r\n        return todoItem;\r\n      })\r\n    );\r\n  };\r\n\r\n  console.log(isMobile);\r\n  return (\r\n    <li\r\n      onMouseOver={mouseOverHandle}\r\n      onMouseLeave={mouseLeaveHandle}\r\n      onClick={completeHandler}\r\n      className={`todo-item ${todo.isCompleted ? 'todo-item-completed' : ''}`}\r\n    >\r\n      <span className=\"text\">{todo['text']}</span>\r\n      {isMobile === false && showDeleteButton ? (\r\n        <button onClick={deleteHandler} className=\"remove-btn\">\r\n          <i className=\"fas fa-times\"></i>\r\n        </button>\r\n      ) : null}\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default Todo;\r\n\r\n// import React from 'react';\r\n\r\n// function Todo({ text, isCompleted }) {\r\n//   return (\r\n//     <li className=\"todo-item\">\r\n//       <span className=\"text\">{text}</span>\r\n//       <button className=\"remove-btn\">\r\n//         <i className=\"fas fa-times\"></i>\r\n//       </button>\r\n//     </li>\r\n//   );\r\n// }\r\n\r\n// export default Todo;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nfunction Time() {\r\n  const [time, setTime] = useState(new Date());\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setTime(new Date());\r\n    }, 1000);\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n\r\n  let options = { year: 'numeric', month: 'numeric', day: 'numeric' };\r\n  const dateFormatted = time.toLocaleTimeString('tr-TR', options).slice(0, -9);\r\n  const timeFormatted = time.toLocaleTimeString('tr-TR', options).slice(-8);\r\n\r\n  return <div className=\"date\">{`${dateFormatted} ${timeFormatted}`}</div>;\r\n}\r\n\r\nexport default Time;\r\n","import React from 'react';\r\nimport Time from './Time';\r\n\r\nfunction TodoHeader({ inputText, setInputText, todos, setTodos }) {\r\n  const inputTextHandler = (e) => {\r\n    setInputText(e.target.value);\r\n  };\r\n\r\n  const inputSubmitHandler = (e) => {\r\n    if (e.key === 'Enter') {\r\n      if (inputText === '') {\r\n        alert('To-do için açıklama girilmedi.');\r\n      } else {\r\n        let todo = {\r\n          id: todos.length + 1,\r\n          text: inputText,\r\n          isCompleted: false,\r\n        };\r\n        setTodos([...todos, todo]);\r\n      }\r\n      setInputText('');\r\n    }\r\n  };\r\n\r\n  const clearTodos = () => {\r\n    setTodos([]);\r\n    localStorage.clear();\r\n  };\r\n\r\n  return (\r\n    <div className=\"todo-header\">\r\n      <div className=\"todo-header-top\">\r\n        <Time />\r\n        <button onClick={clearTodos} className=\"clear-button\">\r\n          <i className=\"fas fa-sync-alt\"></i>\r\n        </button>\r\n      </div>\r\n      <input\r\n        autoFocus\r\n        className=\"input\"\r\n        type=\"text\"\r\n        value={inputText}\r\n        onChange={inputTextHandler}\r\n        onKeyDown={inputSubmitHandler}\r\n        placeholder=\"Bugün neler yapmak istiyorsun?\"\r\n      ></input>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoHeader;\r\n","import React, { useState } from 'react';\r\n\r\nfunction TodoFooter({ setFilter }) {\r\n  const [isShowCompleted, setIsShowCompleted] = useState(false);\r\n  const [isShowNompleted, setIsShowNompleted] = useState(false);\r\n\r\n  const checkBoxHandler = (e) => {\r\n    if (e.target.className === 'show-completed') {\r\n      if (e.target.checked) {\r\n        setIsShowCompleted(true);\r\n        setIsShowNompleted(false);\r\n\r\n        setFilter('completed');\r\n      } else {\r\n        setIsShowCompleted(false);\r\n        setFilter('all');\r\n      }\r\n    } else {\r\n      if (e.target.checked) {\r\n        setIsShowCompleted(false);\r\n        setIsShowNompleted(true);\r\n        setFilter('nompleted');\r\n      } else {\r\n        setIsShowNompleted(false);\r\n        setFilter('all');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"todo-footer\">\r\n      <div className=\"item\">\r\n        <input\r\n          checked={isShowCompleted}\r\n          onChange={checkBoxHandler}\r\n          type=\"checkbox\"\r\n          className=\"show-completed\"\r\n        />\r\n        <label htmlFor=\"show-completed\">Tamamlananlar</label>\r\n      </div>\r\n      <div className=\"item\">\r\n        <input\r\n          checked={isShowNompleted}\r\n          onChange={checkBoxHandler}\r\n          type=\"checkbox\"\r\n          className=\"show-nompleted\"\r\n        />\r\n        <label htmlFor=\"show-nompleted\">Yapılacaklar</label>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoFooter;\r\n","import React, { useState, useEffect, useLayoutEffect } from 'react';\nimport './App.scss';\nimport Todo from './components/Todo';\nimport TodoHeader from './components/TodoHeader';\nimport TodoFooter from './components/TodoFooter';\nimport {\n  SwipeableList,\n  SwipeableListItem,\n} from '@sandstreamdev/react-swipeable-list';\nimport '@sandstreamdev/react-swipeable-list/dist/styles.css';\n\nfunction App() {\n  const [inputText, setInputText] = useState('');\n  const [todos, setTodos] = useState([]);\n  const [filter, setFilter] = useState('');\n  const [filteredTodos, setFilteredTodos] = useState([]);\n  const [isMobile, setIsMobile] = useState(false);\n\n  useEffect(() => {\n    setIsMobile(window.innerWidth <= 380);\n  }, [isMobile]);\n\n  useEffect(() => {\n    if (localStorage.getItem('todos')) {\n      setTodos(JSON.parse(localStorage.getItem('todos')));\n    }\n  }, []);\n\n  useEffect(() => {\n    switch (filter) {\n      case 'completed':\n        setFilteredTodos(todos.filter((todo) => todo.isCompleted === true));\n        break;\n      case 'nompleted':\n        setFilteredTodos(todos.filter((todo) => todo.isCompleted === false));\n        break;\n      default:\n        setFilteredTodos(todos);\n        break;\n    }\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }, [todos, filter]);\n\n  return useMediaQuery() > 450 ? (\n    <div className=\"App\">\n      <TodoHeader\n        inputText={inputText}\n        setInputText={setInputText}\n        todos={todos}\n        setTodos={setTodos}\n      />\n      <div className=\"todo-body\">\n        <ul className=\"todo-list\">\n          {filteredTodos.map((todo) => (\n            <Todo\n              todo={todo}\n              todos={todos}\n              setTodos={setTodos}\n              isMobile={false}\n            />\n          ))}\n        </ul>\n      </div>\n      <TodoFooter setFilter={setFilter} />\n    </div>\n  ) : (\n    <div className=\"App\">\n      <TodoHeader\n        inputText={inputText}\n        setInputText={setInputText}\n        todos={todos}\n        setTodos={setTodos}\n      />\n      <div className=\"todo-body-mobile\">\n        <ul className=\"todo-list\">\n          <SwipeableList threshold={0.9}>\n            {filteredTodos.map((todo) => (\n              <SwipeableListItem\n                scrollStartThreshold={'2'}\n                swipeStartThreshold={'2'}\n                swipeLeft={{\n                  content: <div className=\"swipe-left\">Sil</div>,\n                  action: () =>\n                    setTodos(\n                      todos.filter((todoItem) => todoItem.id !== todo.id)\n                    ),\n                }}\n                onSwipeProgress={(progress) =>\n                  console.info(`Swipe progress: ${progress}%`)\n                }\n              >\n                <Todo\n                  todo={todo}\n                  todos={todos}\n                  setTodos={setTodos}\n                  isMobile={true}\n                />\n              </SwipeableListItem>\n            ))}\n          </SwipeableList>\n        </ul>\n      </div>\n      <TodoFooter setFilter={setFilter} />\n    </div>\n  );\n}\n\nexport default App;\n\nfunction useMediaQuery() {\n  const [screenSize, setScreenSize] = useState(0);\n\n  useLayoutEffect(() => {\n    function updateScreenSize() {\n      setScreenSize(window.innerWidth);\n    }\n    window.addEventListener('resize', updateScreenSize);\n    updateScreenSize();\n    return () => window.removeEventListener('resize', updateScreenSize);\n  }, []);\n\n  return screenSize;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}